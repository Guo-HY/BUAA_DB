{"remainingRequest":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!e:\\大三上\\数据库\\大作业\\frontend\\mix\\src\\views\\UserInfoView.vue?vue&type=style&index=0&id=b02f18d0&scoped=true&lang=css&","dependencies":[{"path":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\src\\views\\UserInfoView.vue","mtime":1670848433000},{"path":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\node_modules\\css-loader\\dist\\cjs.js","mtime":1662974870799},{"path":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662974872649},{"path":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\node_modules\\postcss-loader\\src\\index.js","mtime":1662974871416},{"path":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662974870267},{"path":"e:\\大三上\\数据库\\大作业\\frontend\\mix\\node_modules\\vue-loader\\lib\\index.js","mtime":1662974872279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbC1oZWFkZXJ7CiAgaGVpZ2h0OiAxMjBweDsKfQouZWwtdGFnICsgLmVsLXRhZyB7CiAgbWFyZ2luLWxlZnQ6IDQwcHg7CiAgaGVpZ2h0OiAzMnB4Owp9Ci5idXR0b24tbmV3LXRhZyB7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7CiAgaGVpZ2h0OiAzMnB4OwogIGxpbmUtaGVpZ2h0OiAzMHB4OwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAwOwp9Ci5pbnB1dC1uZXctdGFnIHsKICB3aWR0aDogMTIwcHg7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsKfQo="},{"version":3,"sources":["UserInfoView.vue"],"names":[],"mappings":";AA+PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserInfoView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n  <el-header class=\"el-header\">\n    <div>\n      <el-avatar src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\">\n      </el-avatar>\n      <input type=\"file\" @change=\"getImageFile\" id=\"img\">\n      <el-button type=\"primary\" @click=\"uploadUserProfilePic\">确认添加</el-button>\n    </div>\n    <div>\n      {{userId}}\n    </div>\n  </el-header>\n  <el-main>\n    <el-tag\n        :key=\"tag\"\n        v-for=\"tag in dynamicTags\"\n        closable\n        @close=\"handleClose(tag)\">\n      {{tag}}\n    </el-tag>\n    <el-input\n        class=\"input-new-tag\"\n        v-if=\"inputVisible\"\n        v-model=\"inputValue\"\n        ref=\"saveTagInput\"\n        @keyup.enter=\"handleInputConfirm\"\n        @blur=\"handleInputConfirm\"\n    >\n    </el-input>\n    <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n  </el-main>\n  <el-main>\n    <el-button type=\"primary\" v-if=\"!changing\" @click=\"toChangeInfo\">修改信息</el-button>\n    <div v-else>\n      <el-button type=\"primary\" @click=\"changeUserInfo\">提交修改</el-button>\n    </div>\n\n    <el-descriptions class=\"margin-top\" title=\"个人信息\" border>\n      <el-descriptions-item>\n        <i class=\"el-icon-user\"></i>\n        用户名\n        <el-input\n            class=\"input-new-tag\"\n            v-if=\"changing\"\n            v-model=\"userName\"\n        >\n        </el-input>\n        <slot v-else>{{userName}}</slot>\n      </el-descriptions-item>\n      <el-descriptions-item>\n        <i class=\"el-icon-mobile-phone\"></i>\n        性别\n        <el-input\n            class=\"input-new-tag\"\n            v-if=\"changing\"\n            v-model=\"gender\"\n        >\n        </el-input>\n        <slot v-else>{{gender}}</slot>\n      </el-descriptions-item>\n      <el-descriptions-item>\n        <i class=\"el-icon-location-outline\"></i>\n        年龄\n        <el-input\n            class=\"input-new-tag\"\n            v-if=\"changing\"\n            v-model=\"age\"\n        >\n        </el-input>\n        <slot v-else>{{age}}</slot>\n      </el-descriptions-item>\n      <el-descriptions-item>\n        <i class=\"el-icon-tickets\"></i>\n        联系方式\n        <el-input\n            class=\"input-new-tag\"\n            v-if=\"changing\"\n            v-model=\"contact\"\n        >\n        </el-input>\n        <slot v-else>{{contact}}</slot>\n      </el-descriptions-item>\n      <el-descriptions-item>\n        <i class=\"el-icon-office-building\"></i>\n        联系地址\n        <el-input\n            class=\"input-new-tag\"\n            v-if=\"changing\"\n            v-model=\"address\"\n        >\n        </el-input>\n        <slot v-else>{{address}}</slot>\n      </el-descriptions-item>\n    </el-descriptions>\n  </el-main>\n</div>\n</template>\n\n<script>\nimport qs from \"qs\";\nexport default {\n  name: \"UserInfoView\",\n  data() {\n    return {\n      userId : this.$store.state.user_id,\n      userName : '流英成和',\n      gender : '女',\n      age : '20',\n      address : '北京航空航天大学',\n      contact : '133xxx',\n      dynamicTags: ['123', '456', '789'],\n      inputVisible: false,\n      changing: false,\n      inputValue: '',\n\n    };\n  },\n  created() {\n    this.getUserInfo();\n    this.getUserTag();\n  },\n  methods: {\n    getImageFile:function(e) {\n      let file = e.target.files[0];\n      this.pic = file;\n    },\n    uploadUserProfilePic() {\n      let formData = new FormData();\n      formData.append('pic', this.pic);\n      this.$http({\n        method: 'post',\n        url: '/api/uploadUserProfilePic',\n        data:formData\n      }).then(res => {\n        console.log(res.data.status);\n      }).catch(err => {\n        console.log(err);\n      })\n    },\n    handleClose(tag) {\n      this.$http({\n        method: 'post',\n        url: '/api/userDeleteTag',       /* 指明后端 api 路径，由于在 main.js 已指定根路径，因此在此处只需写相对路由 */\n        data: qs.stringify({      /* 需要向后端传输的数据，此处使用 qs.stringify 将 json 数据序列化以发送后端 */\n          userId : this.$store.state.user_id,\n          tagName : tag,\n        })\n      }).then(res => {              /* res 是 response 的缩写 */\n        console.log(res.data.status);\n        this.getUserTag();\n      }).catch(err => {\n        console.log(err);         /* 若出现异常则在终端输出相关信息 */\n      })\n      // this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n    },\n\n    showInput() {\n      this.inputVisible = true;\n    },\n\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        // this.dynamicTags.push(inputValue);\n        this.addUserTag(inputValue);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n\n    getUserInfo() {\n      this.$http({\n        method: 'post',\n        url: '/api/getUserInfo',       /* 指明后端 api 路径，由于在 main.js 已指定根路径，因此在此处只需写相对路由 */\n        data: qs.stringify({      /* 需要向后端传输的数据，此处使用 qs.stringify 将 json 数据序列化以发送后端 */\n          userId : this.$store.state.user_id,\n        })\n      }).then(res => {              /* res 是 response 的缩写 */\n        this.userName = res.data.userName;\n        this.gender = res.data.gender;\n        this.age = res.data.age;\n        this.address = res.data.address;\n        this.contact = res.data.contact;\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);         /* 若出现异常则在终端输出相关信息 */\n      })\n    },\n    addUserTag(inputValue) {\n      this.$http({\n        method: 'post',\n        url: '/api/userAddTag',       /* 指明后端 api 路径，由于在 main.js 已指定根路径，因此在此处只需写相对路由 */\n        data: qs.stringify({      /* 需要向后端传输的数据，此处使用 qs.stringify 将 json 数据序列化以发送后端 */\n          userId : this.$store.state.user_id,\n          tagName : inputValue,\n        })\n      }).then(res => {              /* res 是 response 的缩写 */\n        console.log(res.data.status);\n        this.getUserTag();\n      }).catch(err => {\n        console.log(err);         /* 若出现异常则在终端输出相关信息 */\n      })\n    },\n    getUserTag() {\n      this.$http({\n        method: 'post',\n        url: '/api/getUserTag',       /* 指明后端 api 路径，由于在 main.js 已指定根路径，因此在此处只需写相对路由 */\n        data: qs.stringify({      /* 需要向后端传输的数据，此处使用 qs.stringify 将 json 数据序列化以发送后端 */\n          userId : this.$store.state.user_id,\n        })\n      }).then(res => {              /* res 是 response 的缩写 */\n        this.dynamicTags = res.data.dynamicTags;\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);         /* 若出现异常则在终端输出相关信息 */\n      })\n    },\n    toChangeInfo() {\n      this.changing=true;\n    },\n    changeUserInfo() {\n      // window.alert(\"修改成功\");\n      this.changing=false;\n      this.$http({\n        method: 'post',\n        url: '/api/changeUserInfo',       /* 指明后端 api 路径，由于在 main.js 已指定根路径，因此在此处只需写相对路由 */\n        data: qs.stringify({      /* 需要向后端传输的数据，此处使用 qs.stringify 将 json 数据序列化以发送后端 */\n          userId : this.$store.state.user_id,\n          userName : this.userName,\n          gender : this.gender,\n          age : this.age,\n          address : this.address,\n          contact : this.contact,\n        })\n      }).then(res => {              /* res 是 response 的缩写 */\n        switch (res.data.status) {\n          case \"success\":\n            window.alert(\"修改成功\");\n            break;\n          case \"fail\":\n            window.alert(\"修改失败\");\n            break;\n        }\n        console.log(res.data);\n        this.getUserInfo();\n      }).catch(err => {\n        console.log(err);         /* 若出现异常则在终端输出相关信息 */\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-header{\n  height: 120px;\n}\n.el-tag + .el-tag {\n  margin-left: 40px;\n  height: 32px;\n}\n.button-new-tag {\n  margin-left: 20px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.input-new-tag {\n  width: 120px;\n  margin-left: 10px;\n  vertical-align: bottom;\n}\n</style>"]}]}